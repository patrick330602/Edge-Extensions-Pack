{"version":3,"sources":["modules/troubleshooter.js"],"names":[],"mappings":"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","file":"modules/troubleshooter.js","sourcesContent":["addModule('troubleshooter', function(module, moduleID) {\r\n\tmodule.moduleName = 'Troubleshooter';\r\n\tmodule.alwaysEnabled = true;\r\n\tmodule.sort = -7;\r\n\tmodule.description = 'Resolve common problems and clean/clear unwanted settings data.' + '<br/><br/>' +\r\n\t\t'Your first line of defence against browser crashes/updates, or potential issues' + ' with RES, is a frequent backup.' + '<br/><br/>' +\r\n\t\t'See <a href=\"/r/Enhancement/wiki/where_is_res_data_stored\">here</a>' + ' for the location of the RES settings file for your browser/OS.';\r\n\tmodule.category = 'About RES';\r\n\tmodule.options = {\r\n\t\tclearUserInfoCache: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'Clear',\r\n\t\t\tcallback: clearUICache,\r\n\t\t\tdescription: 'Reset the <code>userInfo</code> cache for the currently logged in user. Useful for when link/comment karma appears to have frozen.'\r\n\t\t},\r\n\t\tclearSubreddits: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'Clear',\r\n\t\t\tcallback: clearSubreddits,\r\n\t\t\tdescription: 'Reset the \\'My Subreddits\\' dropdown contents in the event of old/duplicate/missing entries.'\r\n\t\t},\r\n\t\tclearTags: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'Clear',\r\n\t\t\tcallback: clearTags,\r\n\t\t\tdescription: 'Remove all entries for users with between +1 and -1 vote tallies (only non-tagged users).'\r\n\t\t},\r\n\t\tresetToFactory: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'Reset',\r\n\t\t\tcallback: resetToFactory,\r\n\t\t\tdescription: 'Warning: This will remove all your RES settings, including tags, saved comments, filters etc!'\r\n\t\t},\r\n\t\tdisableRES: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'Disable',\r\n\t\t\tcallback: disableRES,\r\n\t\t\tdescription: 'Reloads the page and disables RES for this tab <i>only</i>. RES will still be enabled \\\r\n\t\t\t\tin any other reddit tabs or windows you currently have open or open after this. This feature can be \\\r\n\t\t\t\tused for troubleshooting, as well as to quickly hide usernotes, vote counts, subreddit shortcuts, \\\r\n\t\t\t\tand other RES data for clean screenshotting.'\r\n\t\t},\r\n\t\tbreakpoint: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'Pause JavaScript',\r\n\t\t\tcallback: function() {\r\n\t\t\t\tdebugger; // eslint-disable-line no-debugger\r\n\t\t\t},\r\n\t\t\tdescription: 'Pause JavaScript execution to allow debugging'\r\n\t\t},\r\n\t\ttestTemplates: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'Test templates',\r\n\t\t\tcallback: testTemplates,\r\n\t\t\tdescription: 'Test rendering templates'\r\n\t\t}\r\n\t};\r\n\r\n\tfunction clearUICache() {\r\n\t\tvar user = RESUtils.loggedInUser();\r\n\t\tif (user) {\r\n\t\t\tRESStorage.removeItem('RESUtils.userInfoCache.' + user);\r\n\t\t\tmodules['notifications'].showNotification('Cached info for ' + user + ' was reset.', 2500);\r\n\t\t} else {\r\n\t\t\tmodules['notifications'].showNotification('You must be logged in to perform this task.', 2500);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearSubreddits() {\r\n\t\tvar user = RESUtils.loggedInUser();\r\n\t\tif (user) {\r\n\t\t\tRESStorage.removeItem('RESmodules.subredditManager.subreddits.' + user);\r\n\t\t\tmodules['notifications'].showNotification('Subreddits for ' + user + ' were reset.', 2500);\r\n\t\t} else {\r\n\t\t\tmodules['notifications'].showNotification('You must be logged in to perform this task.', 2500);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearTags() {\r\n\t\tvar confirm = window.confirm('Are you positive?');\r\n\t\tif (confirm) {\r\n\t\t\tvar i,\r\n\t\t\t\tcnt = 0,\r\n\t\t\t\ttags = RESStorage.getItem('RESmodules.userTagger.tags');\r\n\t\t\tif (tags) {\r\n\t\t\t\ttags = JSON.parse(tags);\r\n\t\t\t\tfor (i in tags) {\r\n\t\t\t\t\tif ((tags[i].votes === 1 || tags[i].votes === 0 || tags[i].votes === -1) && !tags[i].hasOwnProperty('tag')) {\r\n\t\t\t\t\t\tdelete tags[i];\r\n\t\t\t\t\t\tcnt += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttags = JSON.stringify(tags);\r\n\t\t\t\tRESStorage.setItem('RESmodules.userTagger.tags', tags);\r\n\t\t\t\tmodules['notifications'].showNotification(cnt + ' entries removed.', 2500);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmodules['notifications'].showNotification('No action was taken', 2500);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction resetToFactory() {\r\n\t\tvar confirm = window.prompt('This will kill all your settings and saved data. If you\\'re certain, type in \"trash\".');\r\n\t\tif (confirm === 'trash' || confirm === '\"trash\"') {\r\n\t\t\tfor (var key in RESStorage) {\r\n\t\t\t\tif (key.indexOf('RES') !== -1) {\r\n\t\t\t\t\tRESStorage.removeItem(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmodules['notifications'].showNotification('All settings reset. Reload to see the result.', 2500);\r\n\t\t} else {\r\n\t\t\tmodules['notifications'].showNotification('No action was taken', 2500);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction disableRES() {\r\n\t\tsessionStorage.setItem('RES.disabled', true);\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tfunction testTemplates() {\r\n\t\tRESTemplates.load('test', function(template) {\r\n\t\t\tvar templateText = template.text({ name: 'FakeUsername' });\r\n\t\t\tconsole.log(templateText);\r\n\r\n\t\t\tmodules['notifications'].showNotification({\r\n\t\t\t\tmoduleID: moduleID,\r\n\t\t\t\theader: 'Template test',\r\n\t\t\t\tmessage: templateText\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n});\r\n"],"sourceRoot":"/source/"}