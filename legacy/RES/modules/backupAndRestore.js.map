{"version":3,"sources":["modules/backupAndRestore.js"],"names":[],"mappings":";;AAAA,UAAU,kBAAV,EAA8B,UAAS,MAAT,EAAiB,QAAjB,EAA2B;AACxD,QAAO,UAAP,GAAoB,kBAApB,CADwD;AAExD,QAAO,QAAP,GAAkB,MAAlB,CAFwD;AAGxD,QAAO,WAAP,GAAqB,4DAArB,CAHwD;AAIxD,QAAO,OAAP,GAAiB;AAChB,UAAQ;AACP,SAAM,QAAN;AACA,SAAM,QAAN;AACA,aAAU,MAAV;AACA,gBAAa,iDAAb;GAJD;AAMA,WAAS;AACR,SAAM,QAAN;AACA,SAAM,SAAN;AACA,aAAU,OAAV;AACA,gBAAa,4FAAb;GAJD;EAPD,CAJwD;;AAmBxD,UAAS,MAAT,GAAkB;;AAEjB,MAAI,WAAW,KAAK,SAAL,CAAe,UAAf,CAAX,CAFa;AAGjB,MAAI,OAAO,IAAI,IAAJ,CAAS,CAAC,QAAD,CAAT,EAAqB,EAAE,MAAM,kBAAN,EAAvB,CAAP;;AAHa,MAKb,OAAO,IAAI,IAAJ,EAAP,CALa;AAMjB,MAAI,WAAW,SAAS,KAAK,cAAL,EAAT,GAAiC,GAAjC,IAAwC,KAAK,QAAL,KAAkB,CAAlB,CAAxC,GAA+D,GAA/D,GAAqE,KAAK,OAAL,EAArE,GAAsF,GAAtF,GAA4F,KAAK,KAAL,CAAW,KAAK,OAAL,KAAiB,IAAjB,CAAvG,GAAgI,YAAhI;;AANE,MAQb,OAAO,SAAS,aAAT,CAAuB,GAAvB,CAAP,CARa;AASjB,OAAK,IAAL,GAAY,IAAI,eAAJ,CAAoB,IAApB,CAAZ,CATiB;AAUjB,OAAK,QAAL,GAAgB,QAAhB,CAViB;AAWjB,WAAS,KAAT,CAAe,IAAf,EAXiB;EAAlB;;AAcA,UAAS,OAAT,GAAmB;AAClB,QACC,yIADD,EAEC,YAAW;AACV,OAAI,OAAO,SAAS,aAAT,CAAuB,OAAvB,CAAP,CADM;AAEV,QAAK,IAAL,GAAY,MAAZ,CAFU;AAGV,QAAK,MAAL,GAAc,YAAd,CAHU;AAIV,QAAK,gBAAL,CAAsB,QAAtB,EAAgC,eAAhC,EAJU;AAKV,QAAK,KAAL,GALU;GAAX,CAFD,CADkB;EAAnB;;AAaA,UAAS,eAAT,CAAyB,CAAzB,EAA4B;AAC3B,MAAI,cAAc,yGAAd,CADuB;AAE3B,MAAI,OAAO,EAAE,MAAF,CAAS,KAAT,CAAe,CAAf,CAAP;;;AAFuB,MAKvB,KAAK,IAAL,CAAU,MAAV,CAAiB,cAAjB,MAAqC,CAAC,CAAD,EAAI;;AAE5C,OAAI,SAAS,IAAI,UAAJ,EAAT,CAFwC;AAG5C,UAAO,MAAP,GAAgB,UAAS,CAAT,EAAY;AAC3B,QAAI,WAAW,KAAK,KAAL,CAAW,OAAO,MAAP,CAAtB;;AADuB,QAGvB,CAAC,QAAD,EAAW;AACd,WAAM,WAAN,EADc;AAEd,YAFc;KAAf;;AAH2B,SAQtB,IAAI,CAAJ,IAAS,QAAd,EAAwB;AACvB,gBAAW,OAAX,CAAmB,CAAnB,EAAsB,SAAS,CAAT,CAAtB,EADuB;KAAxB;;AAIA,UAAM,yDAAN,EAZ2B;AAa3B,aAAS,IAAT,GAAgB,EAAhB,CAb2B;AAc3B,eAAW,SAAS,MAAT,CAAgB,IAAhB,CAAqB,QAArB,CAAX,EAA2C,GAA3C,EAd2B;IAAZ,CAH4B;AAmB5C,UAAO,UAAP,CAAkB,IAAlB,EAnB4C;GAA7C,MAoBO;AACN,SAAM,WAAN,EADM;GApBP;EALD;CA9C6B,CAA9B","file":"modules/backupAndRestore.js","sourcesContent":["addModule('backupAndRestore', function(module, moduleID) {\r\n\tmodule.moduleName = 'Backup & Restore';\r\n\tmodule.category = 'Core';\r\n\tmodule.description = 'Backup and restore your Reddit Enhancement Suite settings.';\r\n\tmodule.options = {\r\n\t\tbackup: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'backup',\r\n\t\t\tcallback: backup,\r\n\t\t\tdescription: 'Download a backup of your current RES settings.'\r\n\t\t},\r\n\t\trestore: {\r\n\t\t\ttype: 'button',\r\n\t\t\ttext: 'restore',\r\n\t\t\tcallback: restore,\r\n\t\t\tdescription: 'Restore a backup of your RES settings. Warning: This will overwrite your current settings.'\r\n\t\t}\r\n\t};\r\n\r\n\tfunction backup() {\r\n\t\t// Generate copy of RES settings for download\r\n\t\tvar settings = JSON.stringify(RESStorage);\r\n\t\tvar blob = new Blob([settings], { type: 'application/json' });\r\n\t\t// Make nice-ish suggested filename RES-yyyy-mm-dd-timestamp.resbackup\r\n\t\tvar date = new Date();\r\n\t\tvar filename = 'RES-' + date.getUTCFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + '-' + Math.round(date.getTime() / 1000) + '.resbackup';\r\n\t\t// Create element to trigger download\r\n\t\tvar link = document.createElement('a');\r\n\t\tlink.href = URL.createObjectURL(blob);\r\n\t\tlink.download = filename;\r\n\t\tRESUtils.click(link);\r\n\t}\r\n\r\n\tfunction restore() {\r\n\t\talert(\r\n\t\t\t'<p>Restoring a .resbackup file will <strong>permanently</strong> overwrite your current settings. Are you sure you want to do this?</p>',\r\n\t\t\tfunction() {\r\n\t\t\t\tvar link = document.createElement('input');\r\n\t\t\t\tlink.type = 'file';\r\n\t\t\t\tlink.accept = '.resbackup';\r\n\t\t\t\tlink.addEventListener('change', restoreFromFile);\r\n\t\t\t\tlink.click();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tfunction restoreFromFile(e) {\r\n\t\tvar failMessage = 'The file you uploaded did not appear to be a valid RES backup (files must have a .resbackup extension).';\r\n\t\tvar file = e.target.files[0];\r\n\r\n\t\t// Check extension\r\n\t\tif (file.name.search(/\\.resbackup$/) !== -1) {\r\n\t\t\t// read file\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onload = function(e) {\r\n\t\t\t\tvar settings = JSON.parse(reader.result);\r\n\t\t\t\t// Fail if JSON is bad\r\n\t\t\t\tif (!settings) {\r\n\t\t\t\t\talert(failMessage);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// Reimport data\r\n\t\t\t\tfor (var k in settings) {\r\n\t\t\t\t\tRESStorage.setItem(k, settings[k]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\talert('Your RES settings have been imported. Reloading reddit.');\r\n\t\t\t\tlocation.hash = '';\r\n\t\t\t\tsetTimeout(location.reload.bind(location), 500);\r\n\t\t\t};\r\n\t\t\treader.readAsText(file);\r\n\t\t} else {\r\n\t\t\talert(failMessage);\r\n\t\t}\r\n\t}\r\n});\r\n"],"sourceRoot":"/source/"}