{"version":3,"sources":["modules/example.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAmBA,UAAU,UAAV,EAAsB,UAAS,MAAT,EAAiB,QAAjB,EAA2B;AAChD,QAAO,UAAP,GAAoB,WAApB,CADgD;AAEhD,QAAO,QAAP,GAAkB,cAAlB,CAFgD;AAGhD,QAAO,WAAP,GAAqB,oBAArB,CAHgD;AAIhD,QAAO,OAAP,GAAiB;;;;;AAKhB,kBAAgB;AACf,SAAM,MAAN;AACA,UAAO,sBAAP;AACA,gBAAa,wCAAb;GAHD;AAKA,kBAAgB;AACf,SAAM,SAAN;AACA,UAAO,KAAP;AACA,gBAAa,wCAAb;GAHD;EAVD;;;AAJgD,OAsBhD,CAAO,OAAP,GAAiB,CAChB,KADgB,CAAjB,CAtBgD;AAyBhD,QAAO,OAAP,GAAiB,EAAjB,CAzBgD;;AA4BhD,QAAO,EAAP,GAAY,YAAW;AACtB,MAAI,MAAC,CAAO,SAAP,EAAD,IAAyB,OAAO,UAAP,EAAzB,EAA+C;;;GAAnD;EADW,CA5BoC;CAA3B,CAAtB","file":"modules/example.js","sourcesContent":["/************************************************************************************************************\r\n\r\nCreating your own module:\r\n\r\nAll modules must have an ID, which is the first parameter passed into addModule.\r\n\r\nIn addition, modules must have the following required properties:\r\n- moduleName - a \"nice name\" for your module\r\n- category - a category such as \"Comments\" for the module to reside under\r\n- description - an explanation of the module's functionality\r\n- include (optional) - an array of page types or regexes to match against location.href\r\n- exclude (optional) - an array of page types or regexes to exclude against location.href\r\n- beforeLoad (optional) code to run after <head> is ready and this module's options are loaded\r\n- go - code to run after <body> is ready. Always checks if both isEnabled() and isMatchURL(), and if so, runs your main code.\r\n\r\nAdd the file to all the browser manifests! You can use `gulp add-module --file module.js` (replace `module.js` with your filename).\r\n\r\n************************************************************************************************************/\r\n\r\naddModule('myModule', function(module, moduleID) {\r\n\tmodule.moduleName = 'My Module';\r\n\tmodule.category = 'CategoryName';\r\n\tmodule.description = 'This is my module!';\r\n\tmodule.options = {\r\n\t\t// Any configurable options go here.\r\n\t\t// Options must have a type and a value..\r\n\t\t// Valid types: text, boolean, color (in hexadecimal form), list\r\n\t\t// For example:\r\n\t\tdefaultMessage: {\r\n\t\t\ttype: 'text',\r\n\t\t\tvalue: 'This is default text',\r\n\t\t\tdescription: 'Explanation of what this option is for'\r\n\t\t},\r\n\t\tdoSpecialStuff: {\r\n\t\t\ttype: 'boolean',\r\n\t\t\tvalue: false,\r\n\t\t\tdescription: 'Explanation of what this option is for'\r\n\t\t}\r\n\t};\r\n\r\n\t// See RESUtils.pageType (utils.js) for other page types\r\n\tmodule.include = [\r\n\t\t'all'\r\n\t];\r\n\tmodule.exclude = [\r\n\t];\r\n\r\n\tmodule.go = function() {\r\n\t\tif ((module.isEnabled()) && (module.isMatchURL())) {\r\n\t\t\t// Do stuff now!\r\n\t\t\t// This is where your code goes...\r\n\t\t}\r\n\t};\r\n});\r\n"],"sourceRoot":"/source/"}