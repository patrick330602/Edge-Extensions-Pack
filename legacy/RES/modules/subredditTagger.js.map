{"version":3,"sources":["modules/subredditTagger.js"],"names":[],"mappings":"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","file":"modules/subredditTagger.js","sourcesContent":["addModule('subRedditTagger', function(module, moduleID) {\r\n\tmodule.moduleName = 'Subreddit Tagger';\r\n\tmodule.category = [ 'Subreddits' ];\r\n\tmodule.description = 'Add custom text to the beginning of submission titles on your front page and /r/all. Useful for adding context to submissions.';\r\n\tmodule.options = {\r\n\t\tsubReddits: {\r\n\t\t\ttype: 'table',\r\n\t\t\taddRowText: '+add tag',\r\n\t\t\tfields: [{\r\n\t\t\t\tname: 'subreddit',\r\n\t\t\t\ttype: 'text'\r\n\t\t\t}, {\r\n\t\t\t\tname: 'doesntContain',\r\n\t\t\t\ttype: 'text'\r\n\t\t\t}, {\r\n\t\t\t\tname: 'tag',\r\n\t\t\t\ttype: 'text'\r\n\t\t\t}],\r\n\t\t\tvalue: [\r\n\t\t\t\t/*\r\n\t\t\t\t['somebodymakethis','SMT','[SMT]'],\r\n\t\t\t\t['pics','pic','[pic]']\r\n\t\t\t\t*/\r\n\t\t\t],\r\n\t\t\tdescription: '<p>Description:</p><dl><dt>subreddit</dt><dd>Name of the subreddit, without slashes.</dd><dt>doesntContain</dt><dd>Any string of text that could be present in a submission title. If a title contains this string, the tag will not be applied.</dd><dt>tag</dt><dd>The text that will appear at the beginning of submission titles. E.g. use [tag], (tag), TAG | , etc...</dd></dl>'\r\n\t\t}\r\n\t};\r\n\r\n\tvar SRTDoesntContain = [];\r\n\tvar SRTTagWith = [];\r\n\r\n\tmodule.go = function() {\r\n\t\tif ((this.isEnabled()) && (this.isMatchURL())) {\r\n\t\t\tcheckForOldSettings();\r\n\t\t\tloadSRTRules();\r\n\r\n\t\t\tRESUtils.watchForElement('siteTable', scanTitles);\r\n\t\t\tscanTitles();\r\n\t\t}\r\n\t};\r\n\r\n\tfunction loadSRTRules() {\r\n\t\tvar subReddits = module.options.subReddits.value;\r\n\t\tfor (var i = 0, len = subReddits.length; i < len; i++) {\r\n\t\t\tvar thisGetArray = subReddits[i];\r\n\t\t\tif (thisGetArray) {\r\n\t\t\t\tSRTDoesntContain[thisGetArray[0].toLowerCase()] = thisGetArray[1];\r\n\t\t\t\tSRTTagWith[thisGetArray[0].toLowerCase()] = thisGetArray[2];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scanTitles(obj) {\r\n\t\tvar qs = '#siteTable > .thing > DIV.entry';\r\n\t\tif (obj) {\r\n\t\t\tqs = '.thing > DIV.entry';\r\n\t\t} else {\r\n\t\t\tobj = document;\r\n\t\t}\r\n\t\tvar entries = obj.querySelectorAll(qs);\r\n\t\tfor (var i = 0, len = entries.length; i < len; i++) {\r\n\t\t\tvar title = $(entries[i]).find('a.title');\r\n\t\t\tif (title.is('.srTagged')) continue;\r\n\t\t\ttitle.addClass('srTagged');\r\n\r\n\t\t\tvar tagToAdd = getTagForEntry(entries[i]);\r\n\t\t\tif (tagToAdd !== undefined) {\r\n\t\t\t\tvar tagText = $('<span>').append(escapeHTML(tagToAdd)).append('&nbsp;');\r\n\t\t\t\ttitle.prepend(tagText);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getTagForEntry(entry) {\r\n\t\tvar hasTag = false;\r\n\t\tvar tagWith;\r\n\r\n\t\tvar thisSubReddit = RESUtils.subredditForPost(entry).toLowerCase();\r\n\t\tdo {\r\n\t\t\tif (thisSubReddit.length) {\r\n\t\t\t\tif (SRTTagWith.hasOwnProperty(thisSubReddit)) {\r\n\t\t\t\t\tif (thisSubReddit && !SRTDoesntContain[thisSubReddit]) {\r\n\t\t\t\t\t\tSRTDoesntContain[thisSubReddit] = '[' + thisSubReddit + ']';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar thisTitle = entry.querySelector('a.title');\r\n\t\t\t\t\tvar thisString = SRTDoesntContain[thisSubReddit];\r\n\t\t\t\t\tif (thisTitle.text.indexOf(thisString) !== -1) {\r\n\t\t\t\t\t\thasTag = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar thisFlair = $(entry).find('.linkflairlabel').text();\r\n\t\t\t\t\tif (thisFlair.indexOf(thisString) !== -1) {\r\n\t\t\t\t\t\thasTag = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (false);\r\n\r\n\t\tif (!hasTag && SRTTagWith.hasOwnProperty(thisSubReddit)) {\r\n\t\t\ttagWith = SRTTagWith[thisSubReddit];\r\n\t\t}\r\n\r\n\t\treturn tagWith;\r\n\t}\r\n\r\n\tfunction checkForOldSettings() {\r\n\t\tvar update = false;\r\n\r\n\t\tvar settingsCopy = [];\r\n\t\tvar subRedditCount = 0;\r\n\t\twhile (RESStorage.getItem('subreddit_' + subRedditCount)) {\r\n\t\t\tvar thisGet = RESStorage.getItem('subreddit_' + subRedditCount).replace(/\\\"/g, '');\r\n\t\t\tvar thisGetArray = thisGet.split('|');\r\n\t\t\tsettingsCopy[subRedditCount] = thisGetArray;\r\n\t\t\tRESStorage.removeItem('subreddit_' + subRedditCount);\r\n\t\t\tsubRedditCount++;\r\n\t\t}\r\n\r\n\t\tif (subRedditCount > 0) {\r\n\t\t\tmodule.options['subReddits'].value = settingsCopy;\r\n\t\t\tupdate = true;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, length = module.options['subReddits'].value.length; i < length; i++) {\r\n\t\t\tvar current = module.options['subReddits'].value[i];\r\n\t\t\tif (current[0].indexOf('/r/') === 0) {\r\n\t\t\t\tcurrent[0] = current[0].slice('/r/'.length);\r\n\t\t\t\tupdate = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (update) {\r\n\t\t\tRESUtils.options.setOption('subRedditTagger', 'subReddits', module.options['subReddits'].value);\r\n\t\t}\r\n\t}\r\n});\r\n"],"sourceRoot":"/source/"}