{"version":3,"sources":["modules/hosts/twitter.js"],"names":[],"mappings":";;AAAA,WAAW,YAAX,EAAyB,SAAzB,EAAoC;AACnC,UAAS,CAAE,aAAF,CAAT;AACA,SAAQ,gBAAS,IAAT,EAAe,IAAf,EAAqB;AAC5B,SAAO,KAAK,OAAL,CAAa,cAAb,MAAiC,CAAC,CAAD,IAAM,KAAK,OAAL,CAAa,SAAb,MAA4B,CAAC,CAAD,CAD9C;EAArB;AAGR,aAAY,oBAAS,IAAT,EAAe;AAC1B,MAAI,MAAM,EAAE,QAAF,EAAN;MACH,SAAS,gFAAT;MACA,SAAS,OAAO,IAAP,CAAY,KAAK,IAAL,CAArB,CAHyB;;AAK1B,MAAI,MAAJ,EAAY;AACX,OAAI,OAAJ,CAAY,IAAZ,EAAkB,uDAAuD,OAAO,CAAP,CAAvD,CAAlB,CADW;GAAZ,MAEO;AACN,OAAI,MAAJ,GADM;GAFP;;AAMA,SAAO,IAAI,OAAJ,EAAP,CAX0B;EAAf;AAaZ,aAAY,oBAAS,IAAT,EAAe,IAAf,EAAqB;AAChC,OAAK,IAAL,GAAY,iBAAZ,CADgC;AAEhC,OAAK,YAAL,GAAoB,mBAApB;;;AAFgC,MAKhC,CAAK,qBAAL,GAA6B,cAAc,QAAd,EAA7B,CALgC;AAMhC,OAAK,cAAL,GAAsB;AACrB,aAAU,oBAAW;AACpB,QAAI,UAAU,SAAS,aAAT,CAAuB,KAAvB,EAA8B,EAA9B,EAAkC,SAAlC,CAAV,CADgB;;AAGpB,aAAS,QAAT,CAAkB,UAAlB,EAA8B;AAC7B,oBAAe,IAAf,CAAoB;AACnB,cAAQ,KAAR;AACA,WAAK,QAAQ,aAAa,mBAAb,GAAmC,EAAnC,CAAR;AACL,cAAQ,gBAAS,QAAT,EAAmB;AAC1B,WAAI,SAAS,MAAT,KAAoB,GAApB,EAAyB;AAC5B,YAAI;AACH,aAAI,OAAO,KAAK,KAAL,CAAW,SAAS,YAAT,CAAlB,CADD;AAEH,WAAE,OAAF,EAAW,IAAX,CAAgB,KAAK,IAAL,CAAhB,CAFG;SAAJ,CAGE,OAAO,KAAP,EAAc;AACf,gBADe;SAAd;QAJH,MAOO;AACN,eADM;QAPP;OADO;MAHT,EAD6B;KAA9B;AAkBA,aAAS,IAAT,GAAgB;AACf,OAAE,OAAF,EAAW,IAAX,CAAgB,iDAAhB,EADe;KAAhB;;AAIA,QAAI,cAAc,QAAd,EAAJ,EAA8B;;AAE7B,SAAI,kBAAkB;AACrB,mBAAa,aAAb;AACA,kBAAY,gBAAgB,KAAhB;AACZ,YAAM;AACL,gBAAS,CAAC,2BAAD,CAAT;OADD;MAHG;;;AAFyB,oBAW7B,CAAgB,OAAhB,CAAwB,gBAAgB,KAAhB,CAAxB,GAAiD,UAAS,aAAT,EAAwB;AACxE,UAAI,aAAJ,EAAmB;AAClB,kBADkB;OAAnB,MAEO;AACN,cADM;OAFP;MADgD,CAXpB;AAkB7B,qBAAgB,KAAhB;;;;AAlB6B,WAsB7B,CAAO,OAAP,CAAe,WAAf,CAA2B,eAA3B,EAA4C,UAAS,QAAT,EAAmB,EAAnB,CAA5C,CAtB6B;KAA9B,MAuBO,IAAI,cAAc,SAAd,EAAJ,EAA+B;;;;;AAKrC,cAAS,IAAT,EALqC;KAA/B,MAMA;AACN,gBADM;KANA;;AAUP,WAAO,OAAP,CA1DoB;IAAX;AA4DV,UAAO,IAAP;GA7DD,CANgC;;AAsEhC,SAAO,EAAE,QAAF,GAAa,OAAb,CAAqB,IAArB,EAA2B,OAA3B,EAAP,CAtEgC;EAArB;CAlBb","file":"modules/hosts/twitter.js","sourcesContent":["addLibrary('mediaHosts', 'twitter', {\r\n\tdomains: [ 'twitter.com' ],\r\n\tdetect: function(href, elem) {\r\n\t\treturn href.indexOf('twitter.com/') !== -1 && href.indexOf('/status') !== -1;\r\n\t},\r\n\thandleLink: function(elem) {\r\n\t\tvar def = $.Deferred(),\r\n\t\t\thashRe = /^https?:\\/\\/(?:mobile\\.)?twitter\\.com\\/(?:#!\\/)?[\\w]+\\/status(?:es)?\\/([\\d]+)/i,\r\n\t\t\tgroups = hashRe.exec(elem.href);\r\n\r\n\t\tif (groups) {\r\n\t\t\tdef.resolve(elem, 'https://api.twitter.com/1/statuses/oembed.json?id=' + groups[1]);\r\n\t\t} else {\r\n\t\t\tdef.reject();\r\n\t\t}\r\n\r\n\t\treturn def.promise();\r\n\t},\r\n\thandleInfo: function(elem, info) {\r\n\t\telem.type = 'GENERIC_EXPANDO';\r\n\t\telem.expandoClass = ' selftext twitter';\r\n\t\t// twitter expandos in Chrome must be opened by a user action so we can ask for permissions\r\n\t\t// https://developer.chrome.com/extensions/permissions#request\r\n\t\telem.doNotExpandInSelfText = BrowserDetect.isChrome();\r\n\t\telem.expandoOptions = {\r\n\t\t\tgenerate: function() {\r\n\t\t\t\tvar expando = RESUtils.createElement('div', '', 'expando');\r\n\r\n\t\t\t\tfunction getTweet(omitScript) {\r\n\t\t\t\t\tRESEnvironment.ajax({\r\n\t\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\t\turl: info + (omitScript ? '&omit_script=true' : ''),\r\n\t\t\t\t\t\tonload: function(response) {\r\n\t\t\t\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tvar json = JSON.parse(response.responseText);\r\n\t\t\t\t\t\t\t\t\t$(expando).html(json.html);\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\tfail();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tfail();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tfunction fail() {\r\n\t\t\t\t\t$(expando).html('<span class=\"error\">Error loading tweet.</span>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (BrowserDetect.isChrome()) {\r\n\t\t\t\t\t// first, we need to see if we have permissions for the twitter API...\r\n\t\t\t\t\tvar permissionsJSON = {\r\n\t\t\t\t\t\trequestType: 'permissions',\r\n\t\t\t\t\t\tcallbackID: permissionQueue.count,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\torigins: ['https://api.twitter.com/*']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// save a function call that'll run the expando if our permissions request\r\n\t\t\t\t\t// comes back with a result of true\r\n\t\t\t\t\tpermissionQueue.onloads[permissionQueue.count] = function(hasPermission) {\r\n\t\t\t\t\t\tif (hasPermission) {\r\n\t\t\t\t\t\t\tgetTweet();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfail();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tpermissionQueue.count++;\r\n\r\n\t\t\t\t\t// we do a noop in the callback here because we can't actually get a\r\n\t\t\t\t\t// response - there's multiple async calls going on...\r\n\t\t\t\t\tchrome.runtime.sendMessage(permissionsJSON, function(response) {});\r\n\t\t\t\t} else if (BrowserDetect.isFirefox()) {\r\n\t\t\t\t\t// we've got a jetpack extension, hit up the background page...\r\n\t\t\t\t\t// we have to omit the script tag and all of the nice formatting it brings us in Firefox\r\n\t\t\t\t\t// because AMO does not permit externally hosted script tags being pulled in from\r\n\t\t\t\t\t// oEmbed like this...\r\n\t\t\t\t\tgetTweet(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgetTweet();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn expando;\r\n\t\t\t},\r\n\t\t\tmedia: info\r\n\t\t};\r\n\r\n\t\treturn $.Deferred().resolve(elem).promise();\r\n\t}\r\n});\r\n"],"sourceRoot":"/source/"}