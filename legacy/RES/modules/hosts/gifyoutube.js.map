{"version":3,"sources":["modules/hosts/gifyoutube.js"],"names":[],"mappings":";;AAAA,WAAW,YAAX,EAAyB,YAAzB,EAAuC;AACtC,UAAS,CAAC,gBAAD,EAAmB,WAAnB,CAAT;AACA,SAAQ,gBAAS,IAAT,EAAe,IAAf,EAAqB;AAC5B,SAAQ,KAAK,OAAL,CAAa,gBAAb,MAAmC,CAAC,CAAD,IAAM,KAAK,OAAL,CAAa,WAAb,MAA8B,CAAC,CAAD,CADnD;EAArB;AAGR,aAAY,oBAAS,IAAT,EAAe;;;AAG1B,MAAI,SAAS,wEAAT;MACH,MAAM,EAAE,QAAF,EAAN;MACA,SAAS,OAAO,IAAP,CAAY,KAAK,IAAL,CAArB;MACA,OAAO,KAAK,IAAL,CAAU,WAAV,EAAP;MACA,UAAU,QAAQ,YAAR,EAAsB,WAAtB,CAAkC,YAAlC,CAAV;MACA,OAAO,EAAP;MACA,QAAQ,SAAS,QAAT;MACR,MAPD,CAH0B;;AAa1B,MAAI,CAAC,MAAD,EAAS;AACZ,YAAS,iDAAT,CADY;AAEZ,YAAS,OAAO,IAAP,CAAY,KAAK,IAAL,CAArB,CAFY;;AAIZ,OAAI,CAAC,MAAD,EAAS;AACZ,WAAO,IAAI,MAAJ,EAAP,CADY;IAAb;GAJD;AAQA,MAAI,KAAK,OAAL,CAAa,OAAb,MAA0B,CAAC,CAAD,EAAI;AACjC,UAAO,OAAP,CADiC;AAEjC,WAAQ,OAAR;AAFiC,GAAlC;AAIA,WAAS,QAAQ,IAAR,GAAe,qBAAf,GAAuC,mBAAmB,OAAO,CAAP,CAAnB,CAAvC,CAzBiB;AA0B1B,OAAK,YAAL,GAAoB;AACnB,YAAS,OAAT;AACA,WAAQ,MAAR;GAFD,CA1B0B;;AAgC1B,MAAI,OAAO;AACV,WAAQ,iCAAiC,OAAO,CAAP,CAAjC,GAA6C,MAA7C;AACR,YAAS,iCAAiC,OAAO,CAAP,CAAjC,GAA6C,OAA7C;AACT,WAAQ,iCAAiC,OAAO,CAAP,CAAjC,GAA6C,MAA7C;AACR,aAAU,KAAK,IAAL;GAJP,CAhCsB;AAsC1B,MAAI,OAAJ,CAAY,IAAZ,EAAkB,IAAlB,EAtC0B;AAuC1B,SAAO,IAAI,OAAJ,EAAP,CAvC0B;EAAf;AAyCZ,aAAY,oBAAS,IAAT,EAAe,IAAf,EAAqB;AAChC,MAAI,WAAW,SAAX,QAAW,CAAS,OAAT,EAAkB;AAChC,OAAI,WAAW,aAAa,OAAb,CAAqB,cAArB,CAAX,CAD4B;AAEhC,OAAI,QAAQ;AACX,UAAM,IAAN;AACA,cAAU,IAAV;AACA,WAAO,IAAP;AACA,eAAW,KAAK,IAAL;IAJR,CAF4B;AAQhC,SAAM,OAAN,GAAgB,CACf;AACC,cAAU,KAAK,OAAL;AACV,YAAQ,YAAR;AACA,aAAS,mBAAT;IAJc,EAMf;AACC,cAAU,KAAK,MAAL;AACV,YAAQ,WAAR;AACA,aAAS,kBAAT;IATc,CAAhB,CARgC;AAoBhC,OAAI,UAAU,SAAS,IAAT,CAAc,KAAd,EAAqB,CAArB,CAAV;OACH,IAAI,QAAQ,aAAR,CAAsB,OAAtB,CAAJ;;;AArB+B,IAwBhC,CAAE,KAAF,CAAQ,QAAR,GAAmB,EAAE,IAAF,EAAQ,OAAR,CAAgB,QAAhB,EAA0B,KAA1B,KAAoC,IAApC,CAxBa;AAyBhC,OAAI,OAAO,gBAAP,CAAwB,OAA5B,EAAqC,KAAK,IAAL,EAAW,KAAK,MAAL,CAAhD,CAzBgC;AA0BhC,UAAO,OAAP,CA1BgC;GAAlB,CADiB;AA6BhC,OAAK,IAAL,GAAY,iBAAZ,CA7BgC;AA8BhC,OAAK,OAAL,GAAe,OAAf;;AA9BgC,MAgChC,CAAK,eAAL,GAAuB,IAAvB,CAhCgC;AAiChC,OAAK,YAAL,GAAoB,cAApB,CAjCgC;;AAmChC,OAAK,cAAL,GAAsB;AACrB,aAAU,QAAV;AACA,UAAO,IAAP;GAFD,CAnCgC;;AAwChC,MAAI,SAAS,QAAT,OAAwB,UAAxB,EAAoC;AACvC,KAAE,IAAF,EAAQ,OAAR,CAAgB,QAAhB,EAA0B,IAA1B,CAA+B,YAA/B,EAA6C,IAA7C,CAAkD,MAAlD,EAA0D,KAAK,IAAL,CAA1D,CADuC;GAAxC;AAGA,SAAO,EAAE,QAAF,GAAa,OAAb,CAAqB,IAArB,EAA2B,OAA3B,EAAP,CA3CgC;EAArB;AA6CZ,WAAU,kBAAS,SAAT,EAAoB;AAC7B,MAAI,OAAO,UAAU,YAAV,CADkB;;AAG7B,MAAI,CAAC,KAAK,MAAL,EAAa;AACjB,UADiB;GAAlB;;AAIA,iBAAe,IAAf,CAAoB;AACnB,WAAQ,KAAR;AACA,QAAK,KAAK,MAAL;AACL,oBAAiB,IAAjB;AACA,WAAQ,gBAAS,QAAT,EAAmB;AAC1B,QAAI,OAAO,SAAS,KAAT,CAAe,SAAS,YAAT,CAAtB,CADsB;AAE1B,cAAU,UAAV,CAAqB,aAArB,CAAmC,2BAAnC,EAAgE,IAAhE,GAAuE,KAAK,KAAL,CAF7C;IAAnB;GAJT,EAP6B;EAApB;CA3FX","file":"modules/hosts/gifyoutube.js","sourcesContent":["addLibrary('mediaHosts', 'gifyoutube', {\r\n\tdomains: ['gifyoutube.com', 'gifyt.com'],\r\n\tdetect: function(href, elem) {\r\n\t\treturn (href.indexOf('gifyoutube.com') !== -1 || href.indexOf('gifyt.com') !== -1);\r\n\t},\r\n\thandleLink: function(elem) {\r\n\t\t// for share.gifyoutube.com links, that's going to be a direct piece of media,\r\n\t\t// if it ends in GIF, just swap it to webm.\r\n\t\tvar hashRe = /^https?:\\/\\/(?:beta\\.|www\\.)?(?:gifyoutube|gifyt)\\.com\\/gif\\/(\\w+)\\.?/i,\r\n\t\t\tdef = $.Deferred(),\r\n\t\t\tgroups = hashRe.exec(elem.href),\r\n\t\t\thref = elem.href.toLowerCase(),\r\n\t\t\tsiteMod = modules['showImages'].siteModules['gifyoutube'],\r\n\t\t\tbeta = '',\r\n\t\t\tproto = location.protocol,\r\n\t\t\tapiURL;\r\n\r\n\r\n\t\tif (!groups) {\r\n\t\t\thashRe = /^https?:\\/\\/share\\.gifyoutube\\.com\\/(\\w+)\\.gif/i;\r\n\t\t\tgroups = hashRe.exec(elem.href);\r\n\r\n\t\t\tif (!groups) {\r\n\t\t\t\treturn def.reject();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (href.indexOf('beta.') !== -1) {\r\n\t\t\tbeta = 'beta.';\r\n\t\t\tproto = 'http:'; // beta doesn't support https yet\r\n\t\t}\r\n\t\tapiURL = proto + beta + 'gifyoutube.com/api/' + encodeURIComponent(groups[1]);\r\n\t\telem.onExpandData = {\r\n\t\t\tsiteMod: siteMod,\r\n\t\t\tapiURL: apiURL\r\n\t\t};\r\n\r\n\r\n\t\tvar info = {\r\n\t\t\tgifUrl: 'http://share.gifyoutube.com/' + groups[1] + '.gif',\r\n\t\t\twebmUrl: 'http://share.gifyoutube.com/' + groups[1] + '.webm',\r\n\t\t\tmp4Url: 'http://share.gifyoutube.com/' + groups[1] + '.mp4',\r\n\t\t\toriginal: elem.href\r\n\t\t};\r\n\t\tdef.resolve(elem, info);\r\n\t\treturn def.promise();\r\n\t},\r\n\thandleInfo: function(elem, info) {\r\n\t\tvar generate = function(options) {\r\n\t\t\tvar template = RESTemplates.getSync('gifyoutubeUI');\r\n\t\t\tvar video = {\r\n\t\t\t\tloop: true,\r\n\t\t\t\tautoplay: true, // gifyoutube will always be muted, so autoplay is OK\r\n\t\t\t\tmuted: true,\r\n\t\t\t\tdirecturl: elem.href\r\n\t\t\t};\r\n\t\t\tvideo.sources = [\r\n\t\t\t\t{\r\n\t\t\t\t\t'source': info.webmUrl,\r\n\t\t\t\t\t'type': 'video/webm',\r\n\t\t\t\t\t'class': 'gifyoutubewebmsrc'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t'source': info.mp4Url,\r\n\t\t\t\t\t'type': 'video/mp4',\r\n\t\t\t\t\t'class': 'gifyoutubemp4src'\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\tvar element = template.html(video)[0],\r\n\t\t\t\tv = element.querySelector('video');\r\n\r\n\t\t\t// set the max width to the width of the entry area\r\n\t\t\tv.style.maxWidth = $(elem).closest('.entry').width() + 'px';\r\n\t\t\tnew window.gifyoutubeObject(element, elem.href, info.gifUrl);\r\n\t\t\treturn element;\r\n\t\t};\r\n\t\telem.type = 'GENERIC_EXPANDO';\r\n\t\telem.subtype = 'VIDEO';\r\n\t\t// open via 'view all images'\r\n\t\telem.expandOnViewAll = true;\r\n\t\telem.expandoClass = ' video-muted';\r\n\r\n\t\telem.expandoOptions = {\r\n\t\t\tgenerate: generate,\r\n\t\t\tmedia: info\r\n\t\t};\r\n\r\n\t\tif (RESUtils.pageType() === 'linklist') {\r\n\t\t\t$(elem).closest('.thing').find('.thumbnail').attr('href', elem.href);\r\n\t\t}\r\n\t\treturn $.Deferred().resolve(elem).promise();\r\n\t},\r\n\tonExpand: function(mediaLink) {\r\n\t\tvar data = mediaLink.onExpandData;\r\n\r\n\t\tif (!data.apiURL) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tRESEnvironment.ajax({\r\n\t\t\tmethod: 'GET',\r\n\t\t\turl: data.apiURL,\r\n\t\t\taggressiveCache: true,\r\n\t\t\tonload: function(response) {\r\n\t\t\t\tvar json = safeJSON.parse(response.responseText);\r\n\t\t\t\tmediaLink.wrapperDiv.querySelector('.gifyoutube-source-button').href = json.sauce;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n});\r\n"],"sourceRoot":"/source/"}